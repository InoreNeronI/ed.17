"use strict";

{# Layout @see https://codepen.io/rstrahl/pen/eJZQej #}
$('.side-left').resizable({ handleSelector: '.side-splitter', resizeHeight: false });

{# RadioButtons: @see http://jsfiddle.net/dan74/6KYVP #}
let requiredRadioboxes = {};
$('input:radio').on('click', function() {
    let oldStatus = $(this).attr('oldStatus');
    if (oldStatus === 'checked' || (typeof oldStatus === 'undefined' && $(this).prop('checked') === false)) {
        $(this).prop('checked', false);
        $(this).removeAttr('oldStatus');
    } else {
        $('input[name="'+$(this).prop('name')+'"]:radio').attr('oldStatus', false);
        $(this).attr('oldStatus', 'checked');
        {# @see http://stackoverflow.com/a/24392931 #}
        let key, item = this.id.split('-');
        for (key in requiredRadioboxes[item[0]]) {
            $('#'+item[0]+'-'+key).get(0).setCustomValidity('');
        }
    }
}).each(function() {
    let item = this.id.split('-');
    if (!(item[0] in requiredRadioboxes)) {
        requiredRadioboxes[item[0]] = {};
    }
    requiredRadioboxes[item[0]][item[1]] = $(this).prop('required');
    if ($(this).prop('checked') !== false) {
        $(this).attr('oldStatus', 'checked');
    }
});

{# Checkboxes: @see http://stackoverflow.com/a/7264962 #}
let requiredCheckboxes = {}, fixCheckBoxes = function(elem) {
    let item = elem.id.split('-'), code = item[1], prefix = item[0];
    if (code in requiredCheckboxes[prefix] && $(elem).prop('checked') === false) {
        let key, realRequiredCheckboxes = {};
        realRequiredCheckboxes[prefix] = [];
        for (key in requiredCheckboxes[prefix]) {
            if (requiredCheckboxes[prefix][key] !== false) {
                realRequiredCheckboxes[prefix].push(key);
            }
        }
        let requiredOptions = $('#' + prefix + '-' + realRequiredCheckboxes[prefix].join(',#' + prefix + '-')), requiredOptionsLength = requiredOptions.length;
        $(requiredOptions).each(function() {
            this.checked ? requiredOptionsLength-- : null;
        });
        for (key in realRequiredCheckboxes[prefix]) {
            if (requiredOptionsLength < requiredOptions.length) {
                $(requiredOptions.eq(key)).removeAttr('required').get(0).setCustomValidity('');
            } else {
                $(requiredOptions.eq(key)).prop('required', requiredCheckboxes[prefix][code]);
            }
        }
    } else {
        for (let key in requiredCheckboxes[prefix]) {
            $('#'+prefix+'-'+key).removeAttr('required').get(0).setCustomValidity('');
        }
    }
    $(elem).next('span').css('color', $(elem).is(':invalid') ? 'red' : 'inherit');
};
$('input:checkbox').each(function() {
    let item = this.id.split('-');
    if (!(item[0] in requiredCheckboxes)) {
        requiredCheckboxes[item[0]] = {};
    }
    requiredCheckboxes[item[0]][item[1]] = $(this).prop('required');
});

{# Forms #}
let forms = document.getElementsByTagName('form');
$.each(forms, function(index, elem) {
    let form = $(elem);
    form.on('submit', function() {
        $(this).find('button').each(function() { this.disabled = true; });
        $(this).find('input:radio:not(:checked)').each(function() {
            if ($('input[name="'+this.name+'"]:checked').length === 0 &&
                $('#'+this.name+'_empty').length === 0) {
                $('<input id="'+this.name+'_empty" type="hidden" name="'+this.name+'" value=""/>').appendTo($(this));
            }
        });
        $(this).find('input:checkbox:not(:checked)').each(function() {
            $('<input type="hidden" name="'+this.name+'" value=""/>').appendTo($(this));
        });
    }).find('button').on('click', function() {
        form.find('input:radio').each(function() {
            $(this).next('span').css('color', $(this).is(':invalid') ? 'red' : 'inherit');
        });
        form.find('input:checkbox').each(function() {
            fixCheckBoxes(this);
            $(this).next('span').css('color', $(this).is(':invalid') ? 'red' : 'inherit');
        });
        if ($(this).hasClass('left-button')) {
            $(forms[1]).not(':submit').find('input').clone().hide().appendTo(form);
        }
        if ($(this).hasClass('right-button')) {
            $(forms[0]).not(':submit').find('input').clone().hide().appendTo(form);
            {% if page|number_format == totalPages|number_format %}form.attr('action', '/');{% endif %}
        }
    });
});